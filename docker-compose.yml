version: "3.3"

services:
  app:
    image: app:latest
    build: 
      context: .
      dockerfile: app.Dockerfile
    ports:
      - "3000:3000"
    working_dir: /var/app
    container_name: app
    networks: 
      - app_net
    volumes:
      - ./app:/var/app
      - /var/app/node_modules
    stdin_open: true # docker run -i
    tty: true # docker run -t
    depends_on:
      - api

  api:
    image: api:latest
    working_dir: /var/api
    environment:
      FLASK_DEBUG: 1
      FLASK_ENV: development
      FLASK_APP: app
    ports:
      - "8000:8000"
    build: 
      context: .
      dockerfile: api.Dockerfile
    container_name: api
    stdin_open: true # docker run -i
    tty: true # docker run -t
    volumes:
      - ./api:/var/api
    networks:
      - app_net
    command: ['flask', 'run', '--host=0.0.0.0', '--port=8000']
    depends_on: 
     # - mongo
      - db

  db:
    image: db:latest
    working_dir: /var/db
    environment:
      FLASK_DEBUG: 1
      FLASK_ENV: development
      FLASK_APP: app
      #MONGODB_DATABASE: users_db
    ports:
      - "8080:8080"
    build:
      context: . 
      dockerfile: db.Dockerfile
    container_name: db
    stdin_open: true # docker run -i
    tty: true # docker run -t
    volumes:
      - ./db:/var/db
    networks:
      - app_net
    command: ['flask', 'run', '--host=0.0.0.0', '--port=8080']
    depends_on: 
      - mongo

  mongo:
    image: mongo:latest
    restart: always
    #hostname: test_mongodb
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=users_db
      - MONGO_INITDB_ROOT_USERNAME=Fittracking
      - MONGO_INITDB_ROOT_PASSWORD=Stayhealthy043
      - MONGODB_DATA_DIR=/data/db
    #volumes:
    #    - mongodb:/data/db
    ports:
      - 27017:27017
    networks:
      - app_net    
    

networks:
  app_net:
    driver: bridge
